# YAML Configuration Settings for Serverless

service: image-converter

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.8
  region: us-east-1
  profile: anubis_cli
  stage: dev
  timeout: 10
  memorySize: 128
  environment:
    THUMBNAIL_SIZE: 128
    REGION_NAME: ${self:provider.region}
    DYNAMODB_TABLE: ${self:custom.dynamoTable}

  iam:
    role:
      statements:
        - Effect: Allow
          Resource: '*'
          Action: 's3:*'
        - Effect: Allow
          Resource: 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}'
          Action: 'dynamodb:*'

custom:
  bucket: anubis-cli-dev
  dynamoTable: img-url-table
  pythonRequirements:
    dockerizePip: true

functions:
  image_converter:
    handler: handler.image_converter
    events:
      - s3:
          bucket: ${self:custom.bucket}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .png
  list:
    handler: handler.s3_get_thumbnail_urls
    events:
      - http:
          path: images/all
          method: get
          cors: true

  get:
    handler: handler.s3_get_item
    events:
      - http:
          path: images/get/{id}
          method: get
          cors: true

  delete:
    handler: handler.s3_delete_item
    events:
      - http:
          path: images/delete/{id}
          method: delete
          cors: true

resources:
  Resources:
    ImagesDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}


plugins:
  - serverless-python-requirements
